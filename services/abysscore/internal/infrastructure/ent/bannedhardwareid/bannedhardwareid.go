// Code generated by ent, DO NOT EDIT.

package bannedhardwareid

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the bannedhardwareid type in the database.
	Label = "banned_hardware_id"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHardwareID holds the string denoting the hardware_id field in the database.
	FieldHardwareID = "hardware_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldBanReason holds the string denoting the ban_reason field in the database.
	FieldBanReason = "ban_reason"
	// Table holds the table name of the bannedhardwareid in the database.
	Table = "banned_hardware_ids"
)

// Columns holds all SQL columns for bannedhardwareid fields.
var Columns = []string{
	FieldID,
	FieldHardwareID,
	FieldCreatedAt,
	FieldBanReason,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the BannedHardwareID queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByHardwareID orders the results by the hardware_id field.
func ByHardwareID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHardwareID, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByBanReason orders the results by the ban_reason field.
func ByBanReason(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBanReason, opts...).ToFunc()
}
