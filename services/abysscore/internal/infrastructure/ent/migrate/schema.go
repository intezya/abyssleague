// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BannedHardwareIdsColumns holds the columns for the "banned_hardware_ids" table.
	BannedHardwareIdsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hardware_id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "ban_reason", Type: field.TypeString, Nullable: true},
	}
	// BannedHardwareIdsTable holds the schema information for the "banned_hardware_ids" table.
	BannedHardwareIdsTable = &schema.Table{
		Name:       "banned_hardware_ids",
		Columns:    BannedHardwareIdsColumns,
		PrimaryKey: []*schema.Column{BannedHardwareIdsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "bannedhardwareid_hardware_id",
				Unique:  true,
				Columns: []*schema.Column{BannedHardwareIdsColumns[1]},
			},
		},
	}
	// FriendRequestsColumns holds the columns for the "friend_requests" table.
	FriendRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "from_user_id", Type: field.TypeInt},
		{Name: "to_user_id", Type: field.TypeInt},
	}
	// FriendRequestsTable holds the schema information for the "friend_requests" table.
	FriendRequestsTable = &schema.Table{
		Name:       "friend_requests",
		Columns:    FriendRequestsColumns,
		PrimaryKey: []*schema.Column{FriendRequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "friend_requests_users_sent_friend_requests",
				Columns:    []*schema.Column{FriendRequestsColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "friend_requests_users_received_friend_requests",
				Columns:    []*schema.Column{FriendRequestsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// GameItemsColumns holds the columns for the "game_items" table.
	GameItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "collection", Type: field.TypeString},
		{Name: "type", Type: field.TypeInt},
		{Name: "rarity", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// GameItemsTable holds the schema information for the "game_items" table.
	GameItemsTable = &schema.Table{
		Name:       "game_items",
		Columns:    GameItemsColumns,
		PrimaryKey: []*schema.Column{GameItemsColumns[0]},
	}
	// InventoryItemsColumns holds the columns for the "inventory_items" table.
	InventoryItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "received_from_id", Type: field.TypeInt, Default: 0},
		{Name: "obtained_at", Type: field.TypeTime},
		{Name: "item_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// InventoryItemsTable holds the schema information for the "inventory_items" table.
	InventoryItemsTable = &schema.Table{
		Name:       "inventory_items",
		Columns:    InventoryItemsColumns,
		PrimaryKey: []*schema.Column{InventoryItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventory_items_game_items_inventory_items",
				Columns:    []*schema.Column{InventoryItemsColumns[3]},
				RefColumns: []*schema.Column{GameItemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "inventory_items_users_items",
				Columns:    []*schema.Column{InventoryItemsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "inventoryitem_user_id_item_id",
				Unique:  false,
				Columns: []*schema.Column{InventoryItemsColumns[4], InventoryItemsColumns[3]},
			},
		},
	}
	// MatchesColumns holds the columns for the "matches" table.
	MatchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "player1_penalty_time", Type: field.TypeInt, Default: 0},
		{Name: "player2_penalty_time", Type: field.TypeInt, Default: 0},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"characters_reveal", "waiting_for_ready", "drafting", "matching", "finished"}, Default: "characters_reveal"},
		{Name: "result", Type: field.TypeEnum, Nullable: true, Enums: []string{"player1_win", "player2_win", "draw"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "changed_to_current_status_at", Type: field.TypeTime},
		{Name: "player1_id", Type: field.TypeInt},
		{Name: "player2_id", Type: field.TypeInt},
	}
	// MatchesTable holds the schema information for the "matches" table.
	MatchesTable = &schema.Table{
		Name:       "matches",
		Columns:    MatchesColumns,
		PrimaryKey: []*schema.Column{MatchesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "matches_users_player1",
				Columns:    []*schema.Column{MatchesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "matches_users_player2",
				Columns:    []*schema.Column{MatchesColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PlayerMatchResultsColumns holds the columns for the "player_match_results" table.
	PlayerMatchResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "score", Type: field.TypeInt},
		{Name: "is_retried", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "match_id", Type: field.TypeInt},
		{Name: "player_id", Type: field.TypeInt},
	}
	// PlayerMatchResultsTable holds the schema information for the "player_match_results" table.
	PlayerMatchResultsTable = &schema.Table{
		Name:       "player_match_results",
		Columns:    PlayerMatchResultsColumns,
		PrimaryKey: []*schema.Column{PlayerMatchResultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "player_match_results_matches_results",
				Columns:    []*schema.Column{PlayerMatchResultsColumns[4]},
				RefColumns: []*schema.Column{MatchesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "player_match_results_users_user",
				Columns:    []*schema.Column{PlayerMatchResultsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// StatisticsColumns holds the columns for the "statistics" table.
	StatisticsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"global"}, Default: "global"},
		{Name: "period", Type: field.TypeInt, Default: 0},
		{Name: "xp", Type: field.TypeInt, Default: 0},
		{Name: "match_count", Type: field.TypeInt, Default: 0},
		{Name: "wins_count", Type: field.TypeInt, Default: 0},
		{Name: "loses_count", Type: field.TypeInt, Default: 0},
		{Name: "draws_count", Type: field.TypeInt, Default: 0},
		{Name: "result_time", Type: field.TypeInt, Default: 0},
		{Name: "retry_time", Type: field.TypeInt, Default: 0},
		{Name: "retry_count", Type: field.TypeInt, Default: 0},
		{Name: "best_result_time", Type: field.TypeInt, Default: 0},
		{Name: "best_retry_count", Type: field.TypeInt, Default: 0},
		{Name: "best_match_time", Type: field.TypeInt, Default: 0},
		{Name: "worst_result_time", Type: field.TypeInt, Default: 0},
		{Name: "worst_retry_count", Type: field.TypeInt, Default: 0},
		{Name: "worst_match_time", Type: field.TypeInt, Default: 0},
		{Name: "max_win_streak", Type: field.TypeInt, Default: 0},
		{Name: "max_lose_streak", Type: field.TypeInt, Default: 0},
		{Name: "max_login_streak", Type: field.TypeInt, Default: 0},
		{Name: "search_score", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// StatisticsTable holds the schema information for the "statistics" table.
	StatisticsTable = &schema.Table{
		Name:       "statistics",
		Columns:    StatisticsColumns,
		PrimaryKey: []*schema.Column{StatisticsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "statistics_users_statistics",
				Columns:    []*schema.Column{StatisticsColumns[22]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "hardware_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "access_level", Type: field.TypeString},
		{Name: "genshin_uid", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "hoyolab_login", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "invites_enabled", Type: field.TypeBool, Default: false},
		{Name: "login_at", Type: field.TypeTime},
		{Name: "login_streak", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "search_blocked_until", Type: field.TypeTime, Nullable: true},
		{Name: "search_block_reason", Type: field.TypeString, Nullable: true},
		{Name: "search_blocked_level", Type: field.TypeInt, Default: 0},
		{Name: "account_blocked_until", Type: field.TypeTime, Nullable: true},
		{Name: "account_block_reason", Type: field.TypeString, Nullable: true},
		{Name: "account_blocked_level", Type: field.TypeInt, Default: 0},
		{Name: "current_item_in_profile_id", Type: field.TypeInt, Nullable: true},
		{Name: "current_match_id", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_inventory_items_current_item",
				Columns:    []*schema.Column{UsersColumns[19]},
				RefColumns: []*schema.Column{InventoryItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_matches_current_match",
				Columns:    []*schema.Column{UsersColumns[20]},
				RefColumns: []*schema.Column{MatchesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserBalancesColumns holds the columns for the "user_balances" table.
	UserBalancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "coins", Type: field.TypeFloat64, Default: 0},
		{Name: "last_updated", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt, Unique: true},
	}
	// UserBalancesTable holds the schema information for the "user_balances" table.
	UserBalancesTable = &schema.Table{
		Name:       "user_balances",
		Columns:    UserBalancesColumns,
		PrimaryKey: []*schema.Column{UserBalancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_balances_users_balance",
				Columns:    []*schema.Column{UserBalancesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userbalance_user_id",
				Unique:  true,
				Columns: []*schema.Column{UserBalancesColumns[4]},
			},
		},
	}
	// UserFriendsColumns holds the columns for the "user_friends" table.
	UserFriendsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "friend_id", Type: field.TypeInt},
	}
	// UserFriendsTable holds the schema information for the "user_friends" table.
	UserFriendsTable = &schema.Table{
		Name:       "user_friends",
		Columns:    UserFriendsColumns,
		PrimaryKey: []*schema.Column{UserFriendsColumns[0], UserFriendsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_friends_user_id",
				Columns:    []*schema.Column{UserFriendsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_friends_friend_id",
				Columns:    []*schema.Column{UserFriendsColumns[1]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BannedHardwareIdsTable,
		FriendRequestsTable,
		GameItemsTable,
		InventoryItemsTable,
		MatchesTable,
		PlayerMatchResultsTable,
		StatisticsTable,
		UsersTable,
		UserBalancesTable,
		UserFriendsTable,
	}
)

func init() {
	FriendRequestsTable.ForeignKeys[0].RefTable = UsersTable
	FriendRequestsTable.ForeignKeys[1].RefTable = UsersTable
	InventoryItemsTable.ForeignKeys[0].RefTable = GameItemsTable
	InventoryItemsTable.ForeignKeys[1].RefTable = UsersTable
	MatchesTable.ForeignKeys[0].RefTable = UsersTable
	MatchesTable.ForeignKeys[1].RefTable = UsersTable
	PlayerMatchResultsTable.ForeignKeys[0].RefTable = MatchesTable
	PlayerMatchResultsTable.ForeignKeys[1].RefTable = UsersTable
	StatisticsTable.ForeignKeys[0].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = InventoryItemsTable
	UsersTable.ForeignKeys[1].RefTable = MatchesTable
	UserBalancesTable.ForeignKeys[0].RefTable = UsersTable
	UserFriendsTable.ForeignKeys[0].RefTable = UsersTable
	UserFriendsTable.ForeignKeys[1].RefTable = UsersTable
}
