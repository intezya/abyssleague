basePath: /
definitions:
  domainservice.AuthenticationResult:
    properties:
      online_count:
        type: integer
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/dto.UserFullDTO'
    type: object
  dto.GameItemDTO:
    properties:
      collection:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      rarity:
        type: integer
      type:
        type: integer
    type: object
  dto.InventoryItemDTO:
    properties:
      collection:
        type: string
      game_item_id:
        description: Edges
        type: integer
      id:
        type: integer
      name:
        type: string
      obtained_at:
        type: string
      rarity:
        type: integer
      type:
        type: integer
    type: object
  dto.UserDTO:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      genshin_uid:
        type: string
      hoyolab_login:
        type: string
      id:
        type: integer
      invites_enabled:
        type: boolean
      login_streak:
        type: integer
      username:
        type: string
    type: object
  dto.UserFullDTO:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      current_item:
        $ref: '#/definitions/dto.InventoryItemDTO'
      email:
        type: string
      friends:
        description: Statistics []*Statistic `json:"statistics"`
        items:
          $ref: '#/definitions/dto.UserDTO'
        type: array
      genshin_uid:
        type: string
      hoyolab_login:
        type: string
      id:
        type: integer
      invites_enabled:
        type: boolean
      items:
        description: |-
          SentFriendRequests []*FriendRequest `json:"sent_friend_requests"`
          ReceivedFriendRequests []*FriendRequest `json:"received_friend_requests"`
        items:
          $ref: '#/definitions/dto.InventoryItemDTO'
        type: array
      login_streak:
        type: integer
      username:
        type: string
    type: object
  examples.AuthenticationSuccessResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/domainservice.AuthenticationResult'
      message:
        example: success
        type: string
      path:
        type: string
    type: object
  examples.BadRequestResponse:
    properties:
      code:
        example: 400
        type: integer
      detail:
        type: string
      errors:
        items:
          type: string
        type: array
      message:
        example: bad request
        type: string
      path:
        type: string
    type: object
  examples.CreateGameItemDTOSuccessResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/dto.GameItemDTO'
      message:
        example: success
        type: string
      path:
        type: string
    type: object
  examples.FindGameItemDTOSuccessResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/dto.GameItemDTO'
      message:
        example: success
        type: string
      path:
        type: string
    type: object
  examples.ForbiddenByAccessLevelResponse:
    properties:
      code:
        example: 403
        type: integer
      detail:
        type: string
      message:
        example: insufficient access level
        type: string
      path:
        type: string
    type: object
  examples.GameItemNotFound:
    properties:
      code:
        example: 404
        type: integer
      detail:
        type: string
      message:
        example: game item not found
        type: string
      path:
        type: string
    type: object
  examples.HardwareIDConflictResponse:
    properties:
      code:
        example: 409
        type: integer
      detail:
        type: string
      message:
        example: user hardware id conflict
        type: string
      path:
        type: string
    type: object
  examples.PaginatedGameItemsDTOResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.GameItemDTO'
        type: array
      page:
        type: integer
      size:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  examples.TooManyRequestsResponse:
    properties:
      code:
        example: 429
        type: integer
      detail:
        type: string
      message:
        example: too many requests
        type: string
      path:
        type: string
    type: object
  examples.UnprocessableEntityResponse:
    properties:
      code:
        example: 422
        type: integer
      detail:
        type: string
      message:
        example: unprocessable entity
        type: string
      path:
        type: string
    type: object
  examples.UserNotFoundResponse:
    properties:
      code:
        example: 404
        type: integer
      detail:
        type: string
      message:
        example: user not found
        type: string
      path:
        type: string
    type: object
  examples.UserWrongHardwareIDResponse:
    properties:
      code:
        example: 401
        type: integer
      detail:
        type: string
      message:
        example: wrong hardware id
        type: string
      path:
        type: string
    type: object
  examples.UserWrongPasswordResponse:
    properties:
      code:
        example: 401
        type: integer
      detail:
        type: string
      message:
        example: wrong password
        type: string
      path:
        type: string
    type: object
  examples.UsernameConflictResponse:
    properties:
      code:
        example: 409
        type: integer
      detail:
        type: string
      message:
        example: user already exists
        type: string
      path:
        type: string
    type: object
  request.AuthenticationRequest:
    properties:
      hardware_id:
        example: QXV0aGVudGljQU1ENjA3NDA0
        type: string
      password:
        example: STr0ngP@55w0rD!_
        type: string
      username:
        example: my_legendary_username
        type: string
    required:
      - hardware_id
      - password
      - username
    type: object
  request.CreateUpdateGameItem:
    properties:
      collection:
        type: string
      name:
        type: string
      rarity:
        type: integer
      type:
        type: integer
    required:
      - collection
      - name
      - rarity
      - type
    type: object
  request.PasswordChangeRequest:
    properties:
      new_password:
        example: QXV0aGVudGljQU1ENjA3NDA0
        type: string
      old_password:
        example: STr0ngP@55w0rD!_
        type: string
      username:
        example: my_legendary_username
        type: string
    required:
      - new_password
      - old_password
      - username
    type: object
host: localhost:8080
info:
  contact: { }
  description: API of AbyssCore server
  title: AbyssCore API
  version: "1.0"
paths:
  /api/auth/change_password:
    post:
      consumes:
        - application/json
      description: Changes the password for an existing user
      parameters:
        - description: Password change details
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/request.PasswordChangeRequest'
      produces:
        - application/json
      responses:
        "200":
          description: Password successfully changed
          schema:
            $ref: '#/definitions/examples.AuthenticationSuccessResponse'
        "400":
          description: Bad request - missed request fields
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "401":
          description: Unauthorized - wrong password
          schema:
            $ref: '#/definitions/examples.UserWrongPasswordResponse'
        "404":
          description: Not found - user with this username not found
          schema:
            $ref: '#/definitions/examples.UserNotFoundResponse'
        "422":
          description: Unprocessable entity - invalid request types
          schema:
            $ref: '#/definitions/examples.UnprocessableEntityResponse'
        "429":
          description: Too many requests - received too many auth requests
          schema:
            $ref: '#/definitions/examples.TooManyRequestsResponse'
      summary: Change user password
      tags:
        - Authentication
  /api/auth/login:
    post:
      consumes:
        - application/json
      description: Authenticates a user with username and password
      parameters:
        - description: User login credentials
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/request.AuthenticationRequest'
      produces:
        - application/json
      responses:
        "200":
          description: Successfully authenticated
          schema:
            $ref: '#/definitions/examples.AuthenticationSuccessResponse'
        "400":
          description: Bad request - missed request fields
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "401":
          description: Unauthorized - wrong hardware id
          schema:
            $ref: '#/definitions/examples.UserWrongHardwareIDResponse'
        "404":
          description: Not found - user with this username not found
          schema:
            $ref: '#/definitions/examples.UserNotFoundResponse'
        "409":
          description: Conflict - only one account per device allowed
          schema:
            $ref: '#/definitions/examples.HardwareIDConflictResponse'
        "422":
          description: Unprocessable entity - invalid request types
          schema:
            $ref: '#/definitions/examples.UnprocessableEntityResponse'
        "429":
          description: Too many requests - received too many auth requests
          schema:
            $ref: '#/definitions/examples.TooManyRequestsResponse'
      summary: Authenticate user
      tags:
        - Authentication
  /api/auth/register:
    post:
      consumes:
        - application/json
      description: Creates a new user account with the provided credentials
      parameters:
        - description: User registration details
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/request.AuthenticationRequest'
      produces:
        - application/json
      responses:
        "200":
          description: User successfully registered
          schema:
            $ref: '#/definitions/examples.AuthenticationSuccessResponse'
        "400":
          description: Bad request - missed request fields
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "409":
          description: Conflict - only one account per device allowed
          schema:
            $ref: '#/definitions/examples.HardwareIDConflictResponse'
        "422":
          description: Unprocessable entity - invalid request types
          schema:
            $ref: '#/definitions/examples.UnprocessableEntityResponse'
        "429":
          description: Too many requests - received too many auth requests
          schema:
            $ref: '#/definitions/examples.TooManyRequestsResponse'
      summary: Register a new user
      tags:
        - Authentication
  /api/items:
    get:
      description: Returns a paginated list of game items with sorting
      parameters:
        - description: 'Page number (default: 1)'
          in: query
          name: page
          type: integer
        - description: 'Page size (default: 10)'
          in: query
          name: size
          type: integer
        - description: Field to sort by
          enum:
            - created_at
            - name
            - collection
            - type
            - rarity
          in: query
          name: order_by
          type: string
        - description: Sort order
          enum:
            - asc
            - desc
          in: query
          name: order_type
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Paginated list of game items
          schema:
            $ref: '#/definitions/examples.PaginatedGameItemsDTOResponse'
        "400":
          description: Bad request - invalid query params
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
      summary: List game items
      tags:
        - Game Items
    post:
      consumes:
        - application/json
      description: Admin creates a new game item
      parameters:
        - description: Game item data
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/request.CreateUpdateGameItem'
      produces:
        - application/json
      responses:
        "200":
          description: Created game item
          schema:
            $ref: '#/definitions/examples.CreateGameItemDTOSuccessResponse'
        "400":
          description: Bad request - missed request fields
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "403":
          description: Forbidden - not enough rights
          schema:
            $ref: '#/definitions/examples.ForbiddenByAccessLevelResponse'
        "422":
          description: Unprocessable entity - invalid request types
          schema:
            $ref: '#/definitions/examples.UnprocessableEntityResponse'
      summary: Create game item
      tags:
        - Game Items
  /api/items/{id}:
    delete:
      description: Admin deletes a game item by ID
      parameters:
        - description: Game item ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "204":
          description: Game item deleted
        "400":
          description: Bad request - invalid ID
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "403":
          description: Forbidden - not enough rights
          schema:
            $ref: '#/definitions/examples.ForbiddenByAccessLevelResponse'
        "422":
          description: Unprocessable entity - invalid request types
          schema:
            $ref: '#/definitions/examples.UnprocessableEntityResponse'
      summary: Delete game item
      tags:
        - Game Items
    get:
      description: Returns game item by its ID
      parameters:
        - description: Game item ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Game item
          schema:
            $ref: '#/definitions/examples.FindGameItemDTOSuccessResponse'
        "400":
          description: Bad request - invalid ID
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "404":
          description: Not found - no such game item
          schema:
            $ref: '#/definitions/examples.GameItemNotFound'
      summary: Get game item by ID
      tags:
        - Game Items
    put:
      consumes:
        - application/json
      description: Admin updates a game item by ID
      parameters:
        - description: Game item ID
          in: path
          name: id
          required: true
          type: integer
        - description: Updated game item data
          in: body
          name: request
          required: true
          schema:
            $ref: '#/definitions/request.CreateUpdateGameItem'
      produces:
        - application/json
      responses:
        "204":
          description: Game item updated
        "400":
          description: Bad request - missed request fields
          schema:
            $ref: '#/definitions/examples.BadRequestResponse'
        "403":
          description: Forbidden - not enough rights
          schema:
            $ref: '#/definitions/examples.ForbiddenByAccessLevelResponse'
        "422":
          description: Unprocessable entity - invalid request types
          schema:
            $ref: '#/definitions/examples.UnprocessableEntityResponse'
      summary: Update game item
      tags:
        - Game Items
schemes:
  - http
  - https
swagger: "2.0"
