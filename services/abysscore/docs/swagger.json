{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API of AbyssCore server",
    "title": "AbyssCore API",
    "contact": {},
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/api/auth/change_password": {
      "post": {
        "description": "Changes the password for an existing user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Change user password",
        "parameters": [
          {
            "description": "Password change details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.PasswordChangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password successfully changed",
            "schema": {
              "$ref": "#/definitions/domainservice.AuthenticationResult"
            }
          },
          "401": {
            "description": "Unauthorized - wrong password",
            "schema": {
              "$ref": "#/definitions/examples.UserWrongPasswordResponse"
            }
          },
          "404": {
            "description": "Not found - user with this username not found",
            "schema": {
              "$ref": "#/definitions/examples.UserNotFoundResponse"
            }
          },
          "422": {
            "description": "Unprocessable entity - validation error",
            "schema": {
              "$ref": "#/definitions/examples.UnprocessableErrorResponse"
            }
          },
          "429": {
            "description": "Too many requests - received too many auth requests",
            "schema": {
              "$ref": "#/definitions/examples.TooManyRequestsResponse"
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Authenticates a user with username and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate user",
        "parameters": [
          {
            "description": "User login credentials",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.AuthenticationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "schema": {
              "$ref": "#/definitions/domainservice.AuthenticationResult"
            }
          },
          "401": {
            "description": "Unauthorized - wrong hardware id",
            "schema": {
              "$ref": "#/definitions/examples.UserWrongHardwareIDResponse"
            }
          },
          "404": {
            "description": "Not found - user with this username not found",
            "schema": {
              "$ref": "#/definitions/examples.UserNotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict - only one account per device allowed",
            "schema": {
              "$ref": "#/definitions/examples.HardwareIDConflictResponse"
            }
          },
          "422": {
            "description": "Unprocessable entity - validation error",
            "schema": {
              "$ref": "#/definitions/examples.UnprocessableErrorResponse"
            }
          },
          "429": {
            "description": "Too many requests - received too many auth requests",
            "schema": {
              "$ref": "#/definitions/examples.TooManyRequestsResponse"
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "description": "Creates a new user account with the provided credentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "parameters": [
          {
            "description": "User registration details",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.AuthenticationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully registered",
            "schema": {
              "$ref": "#/definitions/domainservice.AuthenticationResult"
            }
          },
          "409": {
            "description": "Conflict - only one account per device allowed",
            "schema": {
              "$ref": "#/definitions/examples.HardwareIDConflictResponse"
            }
          },
          "422": {
            "description": "Unprocessable entity - validation error",
            "schema": {
              "$ref": "#/definitions/examples.UnprocessableErrorResponse"
            }
          },
          "429": {
            "description": "Too many requests - received too many auth requests",
            "schema": {
              "$ref": "#/definitions/examples.TooManyRequestsResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/base.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "base.ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "domainservice.AuthenticationResult": {
      "type": "object",
      "properties": {
        "online_count": {
          "type": "integer"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        },
        "user": {
          "$ref": "#/definitions/dto.UserFullDTO"
        }
      }
    },
    "dto.InventoryItemDTO": {
      "type": "object",
      "properties": {
        "collection": {
          "type": "string"
        },
        "game_item_id": {
          "description": "Edges",
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "obtained_at": {
          "type": "string"
        },
        "rarity": {
          "type": "integer"
        },
        "type": {
          "type": "integer"
        }
      }
    },
    "dto.UserDTO": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "genshin_uid": {
          "type": "string"
        },
        "hoyolab_login": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "invites_enabled": {
          "type": "boolean"
        },
        "login_streak": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "dto.UserFullDTO": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "current_item": {
          "$ref": "#/definitions/dto.InventoryItemDTO"
        },
        "email": {
          "type": "string"
        },
        "friends": {
          "description": "Statistics []*Statistic `json:\"statistics\"`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.UserDTO"
          }
        },
        "genshin_uid": {
          "type": "string"
        },
        "hoyolab_login": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "invites_enabled": {
          "type": "boolean"
        },
        "items": {
          "description": "SentFriendRequests []*FriendRequest `json:\"sent_friend_requests\"`\nReceivedFriendRequests []*FriendRequest `json:\"received_friend_requests\"`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.InventoryItemDTO"
          }
        },
        "login_streak": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "examples.HardwareIDConflictResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 409
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "user hwid conflict"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "examples.TooManyRequestsResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 429
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "too many requests"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "examples.UnprocessableErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 422
        },
        "detail": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "example": "unprocessable entity"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "examples.UserNotFoundResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 404
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "user not found"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "examples.UserWrongHardwareIDResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 401
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "wrong hwid"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "examples.UserWrongPasswordResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 401
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "wrong password"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "examples.UsernameConflictResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 409
        },
        "detail": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "user already exists"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "request.AuthenticationRequest": {
      "type": "object",
      "required": [
        "hwid",
        "password",
        "username"
      ],
      "properties": {
        "hwid": {
          "type": "string",
          "example": "QXV0aGVudGljQU1ENjA3NDA0"
        },
        "password": {
          "type": "string",
          "example": "STr0ngP@55w0rD!_"
        },
        "username": {
          "type": "string",
          "example": "my_legendary_username"
        }
      }
    },
    "request.PasswordChangeRequest": {
      "type": "object",
      "required": [
        "new_password",
        "old_password",
        "username"
      ],
      "properties": {
        "new_password": {
          "type": "string",
          "example": "QXV0aGVudGljQU1ENjA3NDA0"
        },
        "old_password": {
          "type": "string",
          "example": "STr0ngP@55w0rD!_"
        },
        "username": {
          "type": "string",
          "example": "my_legendary_username"
        }
      }
    }
  }
}